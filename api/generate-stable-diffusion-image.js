export default async function handler(req, res) {
  // CORS headers
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");

  if (req.method === "OPTIONS") {
    res.status(200).end();
    return;
  }


  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  try {
    const { prompt, type = 'scene', options = {} } = req.body;

    if (!prompt) {
      return res.status(400).json({ error: "Missing prompt" });
    }

    const stabilityApiKey = process.env.STABILITY_API_KEY;
    if (!stabilityApiKey) {
      return res.status(500).json({ error: "Stability AI API key not configured" });
    }

    // Enhance prompt for Stable Diffusion
    const enhancedPrompt = enhancePromptForStableDiffusion(prompt, type);
    
    const requestBody = {
      steps: 30,
      cfg_scale: 7,
      height: 1024,
      width: 1024,
      samples: 1,
      style_preset: "photographic",
      ...options,
      text_prompts: [
        {
          text: enhancedPrompt,
          weight: 1
        }
      ]
    };

    console.log(`[StableDiffusion] Generating ${type} image with prompt:`, enhancedPrompt);

    const response = await fetch("https://api.stability.ai/v1/generation/stable-diffusion-xl-1024-v1-0/text-to-image", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${stabilityApiKey}`,
        "Accept": "application/json"
      },
      body: JSON.stringify(requestBody)
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error(`[StableDiffusion] API error: ${response.status} - ${errorText}`);
      return res.status(500).json({ error: `Stable Diffusion API error: ${response.status} - ${errorText}` });
    }

    const data = await response.json();
    
    if (!data.artifacts || data.artifacts.length === 0) {
      return res.status(500).json({ error: "No image generated by Stable Diffusion" });
    }

    // Convert base64 to URL
    const imageData = data.artifacts[0];
    const imageUrl = `data:image/png;base64,${imageData.base64}`;
    
    console.log(`[StableDiffusion] Successfully generated ${type} image`);
    
    return res.status(200).json({ 
      imageUrl, 
      provider: 'stable-diffusion',
      type,
      prompt: enhancedPrompt
    });
  } catch (error) {
    console.error("Stable Diffusion generation failed:", error);
    return res.status(500).json({ error: "Stable Diffusion generation failed", details: error.message });
  }
}

/**
 * Enhance prompts specifically for Stable Diffusion
 */
function enhancePromptForStableDiffusion(prompt, type) {
  let enhanced = prompt;
  
  // Add Stable Diffusion specific enhancements
  const baseEnhancements = [
    'high quality',
    'detailed',
    'professional illustration',
    'children\'s book style',
    'colorful',
    'vibrant'
  ];

  // Type-specific enhancements
  switch (type) {
    case 'character':
      enhanced += ', character design, full body, clear features, appealing';
      break;
    case 'world':
      enhanced += ', landscape, environment, setting, atmospheric';
      break;
    case 'scene':
      enhanced += ', scene composition, action, storytelling';
      break;
  }

  // Add base enhancements
  enhanced += ', ' + baseEnhancements.join(', ');
  
  return enhanced;
}